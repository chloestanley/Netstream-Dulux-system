@model DULUXFINALPART1.Models.ReturnCreateViewModel


@{
    ViewData["Title"] = "Create";
}

<div class="container mt-5">
    <div class="card shadow-lg rounded-4">
        <div class="card-body p-4">
            <h1 class="card-title display-6 mb-3">➕ Create Return</h1>
            <h5 class="text-muted mb-4">Fill out the return details below</h5>

            <!-- Instructions Section -->
            <div class="alert alert-info mb-4">
                <h5 class="fw-bold">Instructions:</h5>
                <ul>
                    <li>Select a shipment from the dropdown list. This will allow you to choose which shipment you're processing a return for.</li>
                    <li>Once a shipment is selected, a list of available delivery numbers for that shipment will appear. You can select one or more delivery numbers for the return.</li>
                    <li>Feel free to add any relevant comments about the return in the Comments section.</li>
                    <li>Once you've selected the relevant delivery numbers and added any comments, click "Submit Return" to complete the process.</li>
                </ul>
            </div>

            <form asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <!-- Shipment Selection -->
                <div class="mb-3">
                    <label asp-for="ScanImageId" class="form-label fw-bold">Select Shipment</label>
                    <select asp-for="ScanImageId" class="form-select" asp-items="ViewBag.ScanImageId" onchange="loadDeliveryNumbers(this)">
                        <option value="">-- Choose a shipment --</option>
                    </select>
                </div>

                <!-- Delivery Numbers with Checkboxes -->
                <div class="mb-3" id="deliveryNumbersDiv" style="display:none;">
                    <label class="form-label fw-bold">Select Delivery Numbers</label>
                    <div id="deliveryCheckboxes" class="form-check d-flex flex-column align-items-start">
                        <!-- Checkboxes will be inserted here -->
                    </div>
                </div>

                <!-- Hidden field to hold selected delivery numbers -->
                <input type="hidden" asp-for="SelectedDeliveries" id="SelectedDeliveries" />


                <!-- Comments Section -->
                <div class="mb-3">
                    <label asp-for="Comments" class="form-label fw-bold">Comments</label>
                    <input asp-for="Comments" class="form-control" placeholder="Add any notes here..." />
                    <span asp-validation-for="Comments" class="text-danger small"></span>
                </div>

                <div class="d-flex justify-content-between align-items-center mt-4">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        ← Back to List
                    </a>
                    <button type="submit" class="btn btn-success btn-lg" onclick="prepareSelectedDeliveries()">
                        ✅ Submit Return
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    function loadDeliveryNumbers(selectElement) {
        var scanImageId = selectElement.value;

        if (scanImageId) {
            $.get("/Returns/GetDeliveryNumbers?scanImageId=" + scanImageId, function (data) {
                var container = $('#deliveryCheckboxes');
                container.empty();

                if (data.length > 0) {
                    $('#deliveryNumbersDiv').show();

                    $.each(data, function (index, value) {
                        var checkbox = `
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="${value}" id="delivery_${index}">
                                <label class="form-check-label" for="delivery_${index}">${value}</label>
                            </div>`;
                        container.append(checkbox);
                    });
                } else {
                    $('#deliveryNumbersDiv').hide();
                }
            });
        } else {
            $('#deliveryNumbersDiv').hide();
        }
    }

    function prepareSelectedDeliveries() {
        var selected = [];
        $('#deliveryCheckboxes input[type=checkbox]:checked').each(function () {
            selected.push($(this).val());
        });
        $('#SelectedDeliveries').val(selected.join(','));
    }
</script>

<script src="//code.tidio.co/daq8vctxa39sfedllqglgoc1fzfoapgx.js" async></script>